{"version":3,"sources":["components/LessonEditor.js","components/Analytics.js","components/Login.js","components/PrivateRoute.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["LessonEditor","value","max","id","data-testid","type","onChange","e","file","target","files","firebase","storage","ref","name","put","on","snapshot","percentage","bytesTransferred","totalBytes","document","getElementById","err","Analytics","Login","location","useLocation","history","useHistory","from","state","pathname","redirectToPreviousPage","useCallback","push","auth","onAuthStateChanged","firebaseUser","classList","remove","add","className","placeholder","onClick","email","pass","signInWithEmailAndPassword","PrivateRoute","children","rest","render","currentUser","to","Home","src","App","signOut","window","reload","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM"],"mappings":"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","file":"static/js/main.8caed5e9.chunk.js","sourcesContent":["import React from 'react'\r\nimport firebase from 'firebase';\r\n\r\nexport default function LessonEditor() {\r\n\r\n    const fileChangeEvent = (e) => {\r\n        var file = e.target.files[0];\r\n        var storageRef = firebase.storage().ref('training_videos/' + file.name);\r\n        var task = storageRef.put(file);\r\n        task.on('state_change', \r\n            function progress(snapshot){\r\n                var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                document.getElementById('uploader').value = percentage;\r\n            },\r\n            function error(err){\r\n\r\n            },\r\n            function complete() {\r\n\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lesson Editor Page</h1>\r\n            <progress value=\"0\" max=\"100\" id=\"uploader\">0%</progress> <br />\r\n            <input data-testid=\"upload\" type=\"file\" id=\"fileButton\" onChange={fileChangeEvent} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Analytics() {\r\n    return (\r\n        <div>\r\n            <p>You found the Analytics page!</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport firebase from 'firebase';\r\nimport '../css/login.css';\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n\r\n    let location = useLocation();\r\n    const history = useHistory();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const LoginEventListen = () => {\r\n        const email = document.getElementById(\"txtEmail\").value;\r\n        const pass = document.getElementById(\"txtPassword\").value;\r\n        const auth = firebase.auth();\r\n        auth.signInWithEmailAndPassword(email, pass);\r\n    }\r\n\r\n    const redirectToPreviousPage = useCallback(() => history.push(from), [history]);\r\n\r\n    firebase.auth().onAuthStateChanged(firebaseUser => {\r\n        if(firebaseUser){\r\n            document.getElementById(\"btnLogout\").classList.remove('hide');\r\n            document.getElementById(\"loginLink\").classList.add('hide');\r\n            redirectToPreviousPage();\r\n        } else {\r\n            document.getElementById(\"btnLogout\").classList.add('hide');\r\n            document.getElementById(\"loginLink\").classList.remove('hide');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <h1 data-testid=\"loginHeader\">Admin Portal Log in</h1>\r\n            <input id=\"txtEmail\" type=\"email\" data-testid=\"email\" placeholder=\"Email\"></input>\r\n\r\n            <input id=\"txtPassword\" type=\"password\" data-testid=\"password\" placeholder=\"Password\"></input>\r\n\r\n            <button id=\"btnLogin\" data-testid=\"btnLogin\" onClick={LoginEventListen}>Log in</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport firebase from 'firebase';\r\nimport '../css/login.css';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n\r\n    const isUserLoggedIn = () => {\r\n        var user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n        isUserLoggedIn() ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/home.css'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div data-testid=\"home\">\r\n            <h1>Welcome to the Admin Portal</h1>\r\n            <div className=\"linkContainer\">\r\n                \r\n                <Link to=\"/lesson-editor\" data-testid=\"lessonLink\">\r\n                    <div className=\"linkChoice\">\r\n                        <h2>Lessons Editor</h2>\r\n                        <img src='../../lessons.png'></img>\r\n                    </div>\r\n                </Link>\r\n\r\n                <Link to=\"/analytics\">\r\n                    <div className=\"linkChoice\">\r\n                        <h2>Analytics Dashboard</h2>\r\n                        <img src='../../analytics.png'></img>\r\n                    </div>\r\n                </Link>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Link, Route, Switch, Redirect } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport LessonEditor from \"./components/LessonEditor\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport Login from './components/Login';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './components/Home';\r\n\r\nimport './css/App.css';\r\n\r\nfunction App() {\r\n\r\n  const LogoutEventListen = () =>{\r\n    firebase.auth().signOut();\r\n    window.location.reload(false);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {/* We should make this a nav component */}\r\n      <div className=\"navBar\">\r\n        <Link to=\"/lesson-editor\" className=\"link\" data-testid=\"lessonLink\">\r\n          <h3>Lessons Editor</h3>\r\n        </Link>\r\n\r\n        <Link to=\"/analytics\" className=\"link\">\r\n          <h3>Analytics Dashboard</h3>\r\n        </Link>\r\n\r\n        <Link to=\"/login\" className=\"link\" id=\"loginLink\">\r\n          <h3>Login Page</h3>\r\n        </Link>\r\n\r\n        <button id=\"btnLogout\" className=\"hide logout\" onClick={LogoutEventListen}>\r\n          Log out\r\n        </button>\r\n      </div>\r\n      \r\n      <Switch>\r\n        <PrivateRoute path=\"/lesson-editor\">\r\n          <LessonEditor />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute path=\"/analytics\">\r\n          <Analytics />\r\n        </PrivateRoute>\r\n\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        <Route path=\"/admin-portal-web-app\" component={Home}></Route>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/admin-portal-web-app\" />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebase from 'firebase';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAtCRHSSIwa5UepmVBQE6sPAeqI28S3XRk\",\r\n  authDomain: \"admin-portal-firebase.firebaseapp.com\",\r\n  databaseURL: \"https://admin-portal-firebase.firebaseio.com\",\r\n  projectId: \"admin-portal-firebase\",\r\n  storageBucket: \"admin-portal-firebase.appspot.com\",\r\n  messagingSenderId: \"718485621784\",\r\n  appId: \"1:718485621784:web:cac547629a659e8cd1c76d\",\r\n  measurementId: \"G-MS08DSSK4Y\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}